
entity Subject {
	name String,
	level Integer,
	levelName String,
	itemOrder String,
    deleted   Boolean
}

entity Question {
    questionType String ,
    score Integer ,  
    gradeLevel Integer , 
    difficult Integer , 
    correct String , 
    infoTextContentId Integer ,
    createBy String ,
    createDate Instant,
    status Integer , 
    deleted Boolean
}
entity Message {
    title String , 
    content String , 
    createDate Instant, 
    sendUserid String , 
    sendUsername String , 
    sendUealname String , 
    receiveUserCount Integer ,
    readcount Integer 
}
entity MessageUser {
       messageId Long,
       receiveUserId Long ,  
       eceiveUsername String ,
       receiveRealname String ,
       readed Boolean,
       createDate Instant,
       readDate Instant 
}

entity ExamPaper {
   name String , 
   subjectId Long , 
   paperType Integer , 
   gradeLevel Integer , 
   score Integer ,
   questionCount Integer , 
   suggestTime  Integer ,
   limitStartDate Instant, 
   limitEneDate Instant, 
   frameTextContentId Integer , 
   createBy Long , 
   createDate Long ,
   deleted Boolean , 
   taskExamId Long 
}
entity ExamPaperAnswer{
   paperName String , 
   paperType Integer , 
   subjectId Long ,
   systemScore Integer,
   userScore Integer ,
   paperScore Integer ,
   questionCorrectt Integer ,
   questionCount  Integer ,
   doTime Integer ,
   status Integer ,	 
   createBy Long , 
   createDate Long ,
   taskExamId Long 
}

entity ExamPaperQuestionCustomerAnswer{
	
    questionId Integer ,
    examPaperId Integer,
    examPaperAnswerId Integer,
    questionType Integer,
    subjectId Integer ,
    customerScore Integer,
    questionScore Integer,
    questionTextContentId Long,
    answer String,
    extConte Boolean ,
    createBy String ,
    createDate Instant,
    temOrder Integer 
}

entity  TextContent {
	content Blob,
    createDate Instant,
}

entity TaskExam {
	title String , 
    gradeLevel Integer ,
    frameTextContentId Long , 
    createBy String , 
    createByUserName String ,
    createDate Instant , 
    deleted Boolean 
}
entity TaskExamAnswer {
	
    taskExamId Long , 
    createBy String , 
    createDate Instant , 
    textContentId Long
}



// defining multiple oneToOne relationships
relationship OneToMany {
	Subject to Question,
    Subject to ExamPaper,
	ExamPaper to ExamPaperAnswer
    Message to MessageUser,
    Question  to ExamPaperQuestionCustomerAnswer
	ExamPaperAnswer  to ExamPaperQuestionCustomerAnswer
	TextContent to TaskExam 
    TaskExam to TaskExamAnswer
}


// Set pagination options
paginate Subject, Question,ExamPaper,ExamPaperAnswer,Message ,TaskExam with infinite-scroll
paginate Job with pagination
dto * with mapstruct
service all with serviceImpl except Subject, Message,Question,ExamPaperAnswer


